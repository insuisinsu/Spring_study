<annotation 세팅>
1. Controller 클래스 위에 @Controller 어노테이션을 할당
	@Controller 를 사용해서 Controller 를 구성할 경우 Spring FrameWork에서 제공해주는
		Controller 인터페이스를 구현하지 않아도 된다.
		--> Override 하지 않기 때문에 원하는 메소드로 작성할 수 있다
	
	 xml 로 했을 때는 Controller 의 메소드에 Request, Response 를 써야 했는데, 	
	
	
	
	
	
	//redirect : viewResolver 설정을 무시하고 리다이렉트 한다. 
						//redirect : viewResolver의 prefix, suffix 가 적용되지 않도록 한다. 
						
						//기본적은 Controller가 View페이지를 던지는 방식은 Forward 방식입니다.
							//클라이언트의 URL이 바뀌지 않는다. 
							//viewResolver가 작동이 된다.    prefix, suffix 가 적용 
						//redirect : 서버에서 전송한 페이지를 client가 재요청 
							//클라이언트의 URL이 바뀐다. 
							//viewResolver 가 작동이 안된다.


<XML 세팅>
1. web.xml	: Spring 의 com.springbook.biz.view.controller.DispatcherServlet을 
			Controller 로 작동
2. Webapp\WEB-INF 에 actionServlet.xml 의 빈 설정 xml 파일이 존재해야함

3. web.xml 설정에서 action-servlet.xml 의 이름이나 위치를 변경할 수 있다
	WEB-IN\config\presentation-layer.xml 로 변경


1. DispatcherSerlet : 모든 클라이언트 요청을 제일 먼저 처리 하는 Font End의 Controller
2. HandlerMapping : 클라이언트 요청 정보를 처리할 Controller 를 매핑(알려줌)
3. Controller : 실질적인 요청을 처리하는 Controller들 , 
				Controller 인터페이스를 구현한 Controller 들 
					( longinController, logoutController, insertBoardController....)
			클라이언트 요청에 대한 작업을 완료 하고, (ViewResolver)에게 뷰페이지 알려줌. <== String
4. ViewResolver : Controller가 리턴한 View 이름으로 실행될 JSP 완성해서 처리 


			 